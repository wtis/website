<?php

namespace WebsiteBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * ContaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContaRepository extends EntityRepository implements UserProviderInterface {

    public function loadUserByUsername($username) {
        $user = $this
                ->createQueryBuilder('c')
                //->join('c.tipoConta', 't')
                ->where("c.username = :username") // and t.descricao = 'Revendedor'
                ->setParameter('username', $username)
                ->getQuery()
                ->getOneOrNullResult()
        ;

        if ($user) {
            $message = sprintf(
                    'Não foi possível encontrar a conta "%s".', $username
            );
            throw new UsernameNotFoundException($message);
        }

        return $user;
    }

    public function refreshUser(UserInterface $user) {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(
            sprintf(
                    'Instances of "%s" are not supported.', $class
            )
            );
        }

        return $this->find($user->getId());
    }

    public function supportsClass($class) {
        return $this->getEntityName() === $class || is_subclass_of($class, $this->getEntityName());
    }

    public function findByRevendedor($revendedor) {
        return $this->getEntityManager()->createQuery("
            SELECT c FROM WebsiteBundle:Conta c 
            JOIN c.pessoa pessoa 
            WHERE pessoa.revendedor='$revendedor'")->getResult();
    }

}
